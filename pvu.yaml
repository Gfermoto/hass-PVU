blueprint:
  name: "Управление ПВУ Turkov с CO₂, влажностью, давлением и расписанием"
  description: |
    Автоматизация для ПВУ Turkov с поддержкой:
    - Управление по температуре, CO₂, влажности, давлению
    - Расписание дня/ночи
    - Настройка приоритетов
  domain: automation
  input:
    # Основные сущности
    turkov_climate:
      name: "Устройство ПВУ Turkov"
      selector:
        entity:
          domain: climate
    temp_indoor:
      name: "Датчик температуры в помещении"
      selector:
        entity:
          domain: sensor
          device_class: temperature
    humidity_indoor:
      name: "Датчик влажности (опционально)"
      selector:
        entity:
          domain: sensor
          device_class: humidity
      optional: true
    pressure_sensor:
      name: "Датчик давления (опционально)"
      selector:
        entity:
          domain: sensor
          device_class: pressure
      optional: true
    co2_sensor:
      name: "Датчик CO₂ (опционально)"
      selector:
        entity:
          domain: sensor
          device_class: carbon_dioxide
      optional: true

    # Параметры
    temp_day:
      name: "Целевая температура днем (°C)"
      default: 22
      selector:
        number:
          min: 10
          max: 30
    temp_night:
      name: "Целевая температура ночью (°C)"
      default: 18
      selector:
        number:
          min: 10
          max: 30
    co2_threshold:
      name: "Макс. уровень CO₂ (ppm)"
      default: 1000
      selector:
        number:
          min: 400
          max: 2000
    humidity_threshold:
      name: "Макс. влажность (%)"
      default: 70
      selector:
        number:
          min: 30
          max: 90

    # Расписание
    schedule_day_start:
      name: "Начало дневного режима"
      selector:
        time:
          default: "07:00:00"
    schedule_night_start:
      name: "Начало ночного режима"
      selector:
        time:
          default: "22:00:00"

trigger:
  - platform: time_pattern
    hours: "/1"  # Каждый час
  - platform: state
    entity_id: !input temp_indoor
  - platform: state
    entity_id: !input co2_sensor
    enabled: "{{ co2_sensor }}"
  - platform: state
    entity_id: !input humidity_indoor
    enabled: "{{ humidity_indoor }}"

action:
  - variables:
      current_mode: >
        {% if now().time() >= as_timestamp(strptime(schedule_day_start, "%H:%M:%S")).time()
          and now().time() < as_timestamp(strptime(schedule_night_start, "%H:%M:%S")).time() %}
          "day"
        {% else %}
          "night"
        {% endif %}
      target_temp: "{{ temp_day if current_mode == 'day' else temp_night }}"

  - choose:
      # Режим ОХЛАЖДЕНИЯ/ОБОГРЕВА по температуре
      - conditions:
          - "{{ states(temp_indoor) | float > target_temp + 1 }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input turkov_climate
            data:
              hvac_mode: "cool"
      - conditions:
          - "{{ states(temp_indoor) | float < target_temp - 1 }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input turkov_climate
            data:
              hvac_mode: "heat"

      # Управление вентиляцией по CO₂
      - conditions:
          - "{{ co2_sensor and states(co2_sensor) | int > co2_threshold }}"
        sequence:
          - service: fan.set_speed
            target:
              entity_id: !input turkov_climate
            data:
              speed: "high"

      # Управление по влажности
      - conditions:
          - "{{ humidity_indoor and states(humidity_indoor) | float > humidity_threshold }}"
        sequence:
          - service: climate.set_hvac_mode
            target:
              entity_id: !input turkov_climate
            data:
              hvac_mode: "dry"  # Режим осушения (если поддерживается)

      # Коррекция по давлению (пример: повышение вентиляции при низком давлении)
      - conditions:
          - "{{ pressure_sensor and states(pressure_sensor) | float < 1000 }}"
        sequence:
          - service: fan.set_speed
            target:
              entity_id: !input turkov_climate
            data:
              speed: "medium"
    default: []
